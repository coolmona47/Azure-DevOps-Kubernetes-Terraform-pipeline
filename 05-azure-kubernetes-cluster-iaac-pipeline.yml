trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- script: echo K8S Terraform Azure!
  displayName: 'Run a one-line script'

- task: DownloadSecureFile@1
  name: publickey
  inputs:
    secureFile: 'azure1-rsa.pub'

- script: |
    # Download and install Terraform manually
    TERRAFORM_VERSION=1.5.7
    wget https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip
    unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip
    sudo mv terraform /usr/local/bin/
    terraform --version
    which terraform
  displayName: 'Install Terraform'

- task: AzureCLI@2
  displayName: 'Set ARM Environment Variables'
  inputs:
    azureSubscription: 'azure-resource-manager-service-connection'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    addSpnToEnvironment: true
    inlineScript: |
      echo "##vso[task.setvariable variable=ARM_CLIENT_ID]$servicePrincipalId"
      echo "##vso[task.setvariable variable=ARM_CLIENT_SECRET]$servicePrincipalKey"
      echo "##vso[task.setvariable variable=ARM_TENANT_ID]$tenantId"
      echo "##vso[task.setvariable variable=ARM_SUBSCRIPTION_ID]$(az account show --query id --output tsv)"
      echo "##vso[task.setvariable variable=ARM_USE_CLI]false"

- script: |
    terraform init \
      -backend-config="resource_group_name=terraform-backend-rg" \
      -backend-config="storage_account_name=storageacctrangaxyz" \
      -backend-config="container_name=storageacctrangacontainer" \
      -backend-config="key=kubernetes-dev.tfstate"
  workingDirectory: '$(System.DefaultWorkingDirectory)/configuration/iaac/azure/kubernetes'
  displayName: 'Terraform Init'
  env:
    ARM_CLIENT_ID: $(ARM_CLIENT_ID)
    ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
    ARM_TENANT_ID: $(ARM_TENANT_ID)
    ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
    ARM_USE_CLI: $(ARM_USE_CLI)

- script: |
    terraform plan \
      -var client_id=$(client_id) \
      -var client_secret=$(client_secret) \
      -var ssh_public_key=$(publickey.secureFilePath)
  workingDirectory: '$(System.DefaultWorkingDirectory)/configuration/iaac/azure/kubernetes'
  displayName: 'Terraform Plan'
  env:
    ARM_CLIENT_ID: $(ARM_CLIENT_ID)
    ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
    ARM_TENANT_ID: $(ARM_TENANT_ID)
    ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
    ARM_USE_CLI: $(ARM_USE_CLI)

- script: |
    terraform apply -auto-approve \
      -var client_id=$(client_id) \
      -var client_secret=$(client_secret) \
      -var ssh_public_key=$(publickey.secureFilePath)
  workingDirectory: '$(System.DefaultWorkingDirectory)/configuration/iaac/azure/kubernetes'
  displayName: 'Terraform Apply'
  env:
    ARM_CLIENT_ID: $(ARM_CLIENT_ID)
    ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
    ARM_TENANT_ID: $(ARM_TENANT_ID)
    ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
    ARM_USE_CLI: $(ARM_USE_CLI)
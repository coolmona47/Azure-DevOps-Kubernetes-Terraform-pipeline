# Starter pipeline
trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
# âœ… Install Terraform first
- task: TerraformInstaller@1
  inputs:
    terraformVersion: 'latest'


# ðŸŸ¢ One-line script to confirm environment
- script: echo k8s terraform azure!
  displayName: 'Run a one-line script'

# âœ… Terraform init with Azure backend
- task: TerraformCLI@2
  inputs:
    command: 'init'
    
    workingDirectory: '$(System.DefaultWorkingDirectory)/configuration/iaac/azure/kubernetes'
    backendType: 'azurerm'
    backendServiceArm: 'Azure subscription 1(0d696f9a-d1f4-4c1b-980d-5a9501ecf1fd)'
    backendAzureRmTenantId: 'ff15dd1b-7224-4d88-8122-54a72fab1081'
    backendAzureRmSubscriptionId: '0d696f9a-d1f4-4c1b-980d-5a9501ecf1fd'
    ensureBackend: true
    backendAzureRmResourceGroupName: 'terraform-backend-rg'
    backendAzureRmResourceGroupLocation: 'westeurope'
    backendAzureRmStorageAccountName: 'storagemohanxyz'
    backendAzureRmContainerName: 'storageaccountmohancontainer'
    backendAzureRmKey: 'kubernetes-dev.tfstate'
    allowTelemetryCollection: true

# âœ… Optional: Download SSH public key for use in infrastructure
- task: DownloadSecureFile@1
  name: publickey
  inputs:
    secureFile: 'azure_rsa.pub'
- task: TerraformCLI@2
  inputs:
    command: 'init'
    commandOptions: '-var clinet_id=$(client_id). -var clinet_secret=$(client_secret) -var ssh_public_key=$(publickey.secureFilepath)'
    backendType: 'azurerm'
    allowTelemetryCollection: true

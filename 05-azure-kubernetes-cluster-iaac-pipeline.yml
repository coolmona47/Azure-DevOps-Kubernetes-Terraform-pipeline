trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- script: echo K8S Terraform Azure!
  displayName: 'Run a one-line script'

# âœ… Secure file (SSH public key)
- task: DownloadSecureFile@1
  name: publickey
  inputs:
    secureFile: 'azure1-rsa.pub'

# âœ… Azure login using your service connection
- task: AzureCLI@2
  displayName: 'Azure CLI Login'
  inputs:
    azureSubscription: 'azure-resource-manager-service-connection'  # ðŸ‘ˆ your actual service connection
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      echo "Logged into Azure successfully"

# âœ… Install Terraform
- task: JasonBJohnson.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-installer.TerraformInstaller@1
  inputs:
    terraformVersion: '1.5.7'

# âœ… Terraform Init
- script: |
    terraform init \
      -backend-config="resource_group_name=terraform-backend-rg" \
      -backend-config="storage_account_name=storageacctrangaxyz" \
      -backend-config="container_name=storageacctrangacontainer" \
      -backend-config="key=kubernetes-dev.tfstate"
  workingDirectory: $(System.DefaultWorkingDirectory)/configuration/iaac/azure/kubernetes
  displayName: 'Terraform Init'

# âœ… Terraform Apply
- script: |
    terraform apply -auto-approve \
      -var client_id=$(client_id) \
      -var client_secret=$(client_secret) \
      -var ssh_public_key=$(publickey.secureFilePath)
  workingDirectory: $(System.DefaultWorkingDirectory)/configuration/iaac/azure/kubernetes
  displayName: 'Terraform Apply'

trigger:
  - main

pool:
  vmImage: ubuntu-latest

steps:
  - checkout: self

  # ✅ Explicitly specify the Terraform Installer task to avoid ambiguity
  - task: JasonBJohnson.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-installer.TerraformInstaller@1
    inputs:
      terraformVersion: '1.5.7'

  # ✅ Add Terraform to PATH and check version
  - script: |
      echo "##[group]Adding Terraform to PATH"
      export PATH="/opt/hostedtoolcache/terraform/1.5.7/x64:$PATH"
      terraform version
      echo "##[endgroup]"
    displayName: 'Check Terraform Version'

  # ✅ Terraform Init
  - script: |
      export PATH="/opt/hostedtoolcache/terraform/1.5.7/x64:$PATH"
      terraform init \
        -backend-config="resource_group_name=terraform-backend-rg" \
        -backend-config="storage_account_name=storageacctmohanxyz" \
        -backend-config="container_name=storageacctmohan" \
        -backend-config="key=kubernetes-dev.tfstate" \
        -backend-config="subscription_id=0d696f9a-d1f4-4c1b-980d-5a9501ecf1fd" \
        -backend-config="tenant_id=ff15dd1b-7224-4d88-8122-54a72fab1081"
    displayName: 'Terraform Init'
    workingDirectory: '$(System.DefaultWorkingDirectory)/configuration/iaac/azure/kubernetes'

  # ✅ Terraform Plan
  - task: TerraformCLI@2
    displayName: 'Terraform Plan'
    inputs:
      command: 'plan'
      workingDirectory: '$(System.DefaultWorkingDirectory)/configuration/iaac/azure/kubernetes'
      environmentServiceName: 'azure-resorce-manager-service-connection'
      commandOptions: >
        -var client_id=$(client_id)
        -var client_secret=$(client_secret)
        -var ssh_public_key=$(publickey.secureFilePath)

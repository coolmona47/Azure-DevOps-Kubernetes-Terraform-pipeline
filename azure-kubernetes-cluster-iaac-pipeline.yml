trigger:
  - master

pool:
  vmImage: ubuntu-latest
  clean: true

variables:
  ssh_public_key_path: $(publickey.secureFilePath)

steps:
  - checkout: self

  # ✅ Install Terraform (newer version to support provider 4.x)
  - task: JasonBJohnson.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-installer.TerraformInstaller@1
    inputs:
      terraformVersion: '1.4.6'  # ✅ Update to modern compatible version

  - script: terraform version
    displayName: 'Check Terraform Version'

  # ✅ Download SSH Public Key
  - task: DownloadSecureFile@1
    name: publickey
    inputs:
      secureFile: 'AZURE_rsa.pub'

  # ✅ Terraform Init with -upgrade
  - task: TerraformCLI@1
    displayName: 'Terraform Init with Upgrade'
    inputs:
      command: 'init'
      workingDirectory: '$(System.DefaultWorkingDirectory)/configuration/iaac/azure/kubernetes'
      backendType: 'azurerm'
      backendServiceArm: 'Azure-resource-manager-service-connection'
      backendAzureRmSubscriptionId: '0d696f9a-d1f4-4c1b-980d-5a9501ecf1fd'
      ensureBackend: true
      backendAzureRmResourceGroupName: 'terraform-backend-rg'
      backendAzureRmResourceGroupLocation: 'westeurope'
      backendAzureRmStorageAccountName: 'storageacctmohanxyz'
      backendAzureRmContainerName: 'storageacctmohancontainer'
      backendAzureRmKey: 'kubernetes-dev.tfstate'
      allowTelemetryCollection: true
      commandOptions: '-upgrade'

  # ✅ Import AKS Cluster (only if needed)
  - script: |
      terraform import azurerm_kubernetes_cluster.terraform-k8s \
      "/subscriptions/0d696f9a-d1f4-4c1b-980d-5a9501ecf1fd/resourceGroups/kubernetes_dev/providers/Microsoft.ContainerService/managedClusters/k8stest_dev"
    displayName: 'Import AKS Cluster into Terraform State'
    workingDirectory: '$(System.DefaultWorkingDirectory)/configuration/iaac/azure/kubernetes'

  # ✅ Destroy the Cluster
  - task: TerraformCLI@1
    displayName: 'Terraform Destroy AKS Cluster'
    inputs:
      command: 'destroy'
      workingDirectory: '$(System.DefaultWorkingDirectory)/configuration/iaac/azure/kubernetes'
      environmentServiceName: 'Azure-resource-manager-service-connection'
      commandOptions: '-var client_id=$(client_id) -var client_secret=$(client_secret) -var ssh_public_key=$(publickey.secureFilePath) -auto-approve'
      allowTelemetryCollection: true
